/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package simulatheure;

import Reseau.*;
import java.util.List;
import java.io.*;
import java.awt.*;
import java.awt.image.*;
import javax.imageio.*;
import java.util.*;
import javax.swing.*;

/**
 *
 * @author rem54
 */
public class SimulatHeure extends javax.swing.JFrame {

    /**
     * Creates new form SimulatHeure
     */
    public Simulation Sim;
    public Station Station_selectionnee;
    public Circuit Circuit_selectionnee;
    public String Element_selectionne;
    
    public String Creation_circuit_etat;
    public List<Station> parcours;
    
    public DefaultListModel model_selection_circuits;
    
    public SimulatHeure() {
        
        initComponents();
        Sim = fenetre_sim1.Sim;
        Creation_circuit_etat = "Demande param";
        parcours = new ArrayList<Station>();
        
        model_selection_circuits = new DefaultListModel();
        liste_circuits.setModel(model_selection_circuits);
        
        Dialog_circuit.pack();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        Dialog_circuit = new javax.swing.JDialog();
        ok_dialog_circuit = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        spin_num = new javax.swing.JSpinner();
        spin_freq = new javax.swing.JSpinner();
        spin_t = new javax.swing.JSpinner();
        jSeparator1 = new javax.swing.JSeparator();
        Radio_ajouter = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Print = new javax.swing.JTextPane();
        Radio_select = new javax.swing.JRadioButton();
        fenetre_sim1 = new simulatheure.Fenetre_sim();
        Radio_deplacer = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        Bouton_simuler = new javax.swing.JButton();
        Bouton_arreter = new javax.swing.JButton();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jLabel1 = new javax.swing.JLabel();
        text_nom = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        liste_circuits = new javax.swing.JList();
        Bouton_circuit = new javax.swing.JButton();
        Bouton_supprimer = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();

        Dialog_circuit.setAlwaysOnTop(true);
        Dialog_circuit.setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        Dialog_circuit.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        Dialog_circuit.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                Dialog_circuitWindowClosing(evt);
            }
        });

        ok_dialog_circuit.setText("Ok");
        ok_dialog_circuit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ok_dialog_circuitActionPerformed(evt);
            }
        });

        jLabel3.setText("Numéro");

        jLabel4.setText("Fréquence");

        jLabel5.setText("Temps avant premier départ");

        spin_num.setModel(new javax.swing.SpinnerNumberModel(0, 0, 999, 1));

        spin_freq.setModel(new javax.swing.SpinnerNumberModel(5, 0, 999, 1));

        spin_t.setModel(new javax.swing.SpinnerNumberModel(0, 0, 999, 1));

        javax.swing.GroupLayout Dialog_circuitLayout = new javax.swing.GroupLayout(Dialog_circuit.getContentPane());
        Dialog_circuit.getContentPane().setLayout(Dialog_circuitLayout);
        Dialog_circuitLayout.setHorizontalGroup(
            Dialog_circuitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Dialog_circuitLayout.createSequentialGroup()
                .addGroup(Dialog_circuitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Dialog_circuitLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(Dialog_circuitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)))
                    .addGroup(Dialog_circuitLayout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(ok_dialog_circuit))
                    .addGroup(Dialog_circuitLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(spin_num, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Dialog_circuitLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(spin_freq, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Dialog_circuitLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(spin_t, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        Dialog_circuitLayout.setVerticalGroup(
            Dialog_circuitLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Dialog_circuitLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spin_num, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spin_freq, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(spin_t, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(ok_dialog_circuit)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SimulatHeure");
        setBackground(new java.awt.Color(0, 0, 0));
        setMinimumSize(new java.awt.Dimension(762, 520));

        buttonGroup1.add(Radio_ajouter);
        Radio_ajouter.setText("Ajouter Station");
        Radio_ajouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Radio_ajouterActionPerformed(evt);
            }
        });

        Print.setEditable(false);
        Print.setBorder(null);
        Print.setToolTipText("");
        Print.setFocusable(false);
        jScrollPane1.setViewportView(Print);

        buttonGroup1.add(Radio_select);
        Radio_select.setText("Selectionner");
        Radio_select.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Radio_selectActionPerformed(evt);
            }
        });

        fenetre_sim1.setBackground(new java.awt.Color(255, 255, 255));
        fenetre_sim1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        fenetre_sim1.setAutoscrolls(true);
        fenetre_sim1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                fenetre_sim1MouseMoved(evt);
            }
        });
        fenetre_sim1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                fenetre_sim1MousePressed(evt);
            }
        });

        javax.swing.GroupLayout fenetre_sim1Layout = new javax.swing.GroupLayout(fenetre_sim1);
        fenetre_sim1.setLayout(fenetre_sim1Layout);
        fenetre_sim1Layout.setHorizontalGroup(
            fenetre_sim1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        fenetre_sim1Layout.setVerticalGroup(
            fenetre_sim1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        buttonGroup1.add(Radio_deplacer);
        Radio_deplacer.setText("Déplacer");
        Radio_deplacer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Radio_deplacerActionPerformed(evt);
            }
        });

        jLabel2.setText("Coordonnées");

        Bouton_simuler.setText("Simuler");
        Bouton_simuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bouton_simulerActionPerformed(evt);
            }
        });

        Bouton_arreter.setText("Arrêter");
        Bouton_arreter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bouton_arreterActionPerformed(evt);
            }
        });

        jInternalFrame1.setClosable(true);
        jInternalFrame1.setTitle("Circuit");
        jInternalFrame1.setAutoscrolls(true);
        jInternalFrame1.setVisible(true);

        jLabel1.setText("Nom");

        text_nom.setToolTipText("");
        text_nom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_nomActionPerformed(evt);
            }
        });

        jLabel6.setText("Circuits");

        liste_circuits.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        liste_circuits.setMaximumSize(new java.awt.Dimension(100, 100));
        liste_circuits.setMinimumSize(new java.awt.Dimension(100, 100));
        liste_circuits.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                liste_circuitsFocusGained(evt);
            }
        });
        liste_circuits.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                liste_circuitsValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(liste_circuits);

        Bouton_circuit.setText("Ajouter Circuit");
        Bouton_circuit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bouton_circuitActionPerformed(evt);
            }
        });

        Bouton_supprimer.setText("Supprimer");
        Bouton_supprimer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                Bouton_supprimerMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(text_nom)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel6)
                            .addComponent(Bouton_circuit, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Bouton_supprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 87, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(text_nom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Bouton_circuit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Bouton_supprimer)
                .addContainerGap())
        );

        jMenu1.setText("Fichier");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edition");

        jMenuItem1.setText("Ajouter Station");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Simulation");
        jMenuBar1.add(jMenu3);

        jMenu4.setText("Outils");
        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Radio_ajouter)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Radio_deplacer)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Radio_select, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Bouton_arreter, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Bouton_simuler, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 179, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(fenetre_sim1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jInternalFrame1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jInternalFrame1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(fenetre_sim1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Bouton_simuler)
                    .addComponent(Bouton_arreter)
                    .addComponent(Radio_ajouter)
                    .addComponent(Radio_deplacer)
                    .addComponent(Radio_select))
                .addGap(5, 5, 5)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void creation_circuit(){
       switch (Creation_circuit_etat){
           
       //deuxieme clic, crée le circuit
       case "reset": // reset
          Creation_circuit_etat = "Demande param";
          Radio_ajouter.setEnabled(true);
          Radio_deplacer.setEnabled(true);
          Print.setText("Création de circuit annulée");
          break;
           
       case "Creation":
          if (parcours.size()>1){
            
            Circuit_selectionnee = Sim.ajouter_circuit(parcours, (Integer)spin_num.getValue(), (Integer)spin_freq.getValue(), (Integer)spin_t.getValue());
            Element_selectionne = "Circuit";
            
            parcours.clear();
            
            System.out.println(Circuit_selectionnee.req_numero());
            model_selection_circuits.addElement(Circuit_selectionnee.req_numero());
            liste_circuits.setSelectedIndex(liste_circuits.getLastVisibleIndex());
            Print.setText("Circuit "+ Circuit_selectionnee.req_numero()+ " créé avec succès!");

            fenetre_sim1.repaint();
          }
          else{
              Print.setText("Vous n'avez pas selectionné assez de stations!");
          }
          Creation_circuit_etat = "Demande param";
          Radio_ajouter.setEnabled(true);
          Radio_deplacer.setEnabled(true);
          break;
       
        //premier clic (mode selection de stations)
       case  "Demande param":
           
           //dialog
           Dialog_circuit.setVisible(true);
           //
           if (Creation_circuit_etat == "reset"){
               creation_circuit();
               break;
           }
           
           Radio_ajouter.setEnabled(false);
           Radio_deplacer.setEnabled(false);
           Radio_select.setSelected(true);
           List<Station> circuit = new ArrayList<Station>();
           Print.setText("Veuillez sélectionner la station 1 du circuit.");
           Creation_circuit_etat = "Creation";
           parcours.clear();
           break;
       default:
           break;
           
       }
    }
    
    
    private void Radio_ajouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Radio_ajouterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Radio_ajouterActionPerformed

    private void Radio_selectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Radio_selectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Radio_selectActionPerformed

    private void text_nomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_nomActionPerformed
        // TODO add your handling code here:
         Station_selectionnee.mod_nom(text_nom.getText());
        Print.setText("Station selectionnée: " + text_nom.getText());
         
    }//GEN-LAST:event_text_nomActionPerformed

    private void fenetre_sim1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fenetre_sim1MousePressed
        
        
        //coordonnées du clic
        int x = evt.getX();
        int y = evt.getY();
        fenetre_sim1.x = x;
        fenetre_sim1.y = y;
        
        
        /* -------------- Selection d'une station ------------- */
        
        int size = fenetre_sim1.img_station_size; //taille d'une station
        
        if (Radio_select.isSelected()){

            Station_selectionnee = Sim.req_station_pos(x,y, size);

            
            if (Station_selectionnee == null){
                

                Print.setText("Station selectionnee: Aucune");
                text_nom.setText("-");
            }
            else{
                Element_selectionne = "Station";
                Print.setText("Station selectionnee: "+Station_selectionnee.req_nom());
                text_nom.setText(Station_selectionnee.req_nom());
            }         
            
            /* -------------- Ajout de station à un circuit ------------- */
            if (Creation_circuit_etat == "Creation"){
                if (Station_selectionnee != null ){
                    parcours.add(Station_selectionnee);

                    Print.setText("Station ajoutée " +Station_selectionnee.req_nom()+  " au parcours!");

                }
                else
                {
                    Print.setText("Veuillez sélectionner une station valide!");
                }
            }
         }
                
            
        /* -------------- Ajout d'une station ------------- */
        
        if (Radio_ajouter.isSelected())
        {
            Station_selectionnee = Sim.ajouter_station(x, y);
            Element_selectionne = "Station";
            Print.setText("Derniere station: " + Station_selectionnee.req_nom());
            text_nom.setText(Station_selectionnee.req_nom());
            
        }
        
        /* -------------- Deplacer station ------------- */
        
        if (Radio_deplacer.isSelected()){
            if (Station_selectionnee != null)
            {
                Station_selectionnee.mod_positionX(x);
                Station_selectionnee.mod_positionY(y);
            }
        }
        
        
        fenetre_sim1.repaint();
    }//GEN-LAST:event_fenetre_sim1MousePressed

    private void Radio_deplacerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Radio_deplacerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Radio_deplacerActionPerformed

    
    private void fenetre_sim1MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fenetre_sim1MouseMoved
       
        jLabel2.setText("X:  "+evt.getX()+"  Y:  "+ evt.getY() );
    }//GEN-LAST:event_fenetre_sim1MouseMoved

    private void Bouton_supprimerMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Bouton_supprimerMouseReleased

        
        if (Element_selectionne == "Station"){
            
            if(Sim.supprimer_station(Station_selectionnee)){
                
                Print.setText("Station supprimée avec succès.");
            }
            else{
                if (Station_selectionnee == null){
                    Print.setText("Il n'y a rien de selectionné à supprimer.");
                }
                else{
                    Print.setText("Station ne peut être supprimée, fait partie d'un circuit.");
                }
            }
            Station_selectionnee = null;

        }
        if (Element_selectionne == "Circuit"){
            
            int i = liste_circuits.getSelectedIndex();
            if (i >= 0){
                System.out.println("Deleting circuit at index: " +i);

                int numero_circuit = Circuit_selectionnee.req_numero();
                Sim.supprimer_circuit(Circuit_selectionnee);
                model_selection_circuits.remove(i);
                Circuit_selectionnee = null;
                Print.setText("Circuit "+numero_circuit+ " supprimé avec succès.");


            }
            else{
            
                    Print.setText("Il n'y a rien de selectionné à supprimer.");
                

            }
        }
        fenetre_sim1.repaint();
    }//GEN-LAST:event_Bouton_supprimerMouseReleased

    private void Bouton_circuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bouton_circuitActionPerformed
        // TODO add your handling code here:
        creation_circuit();
    }//GEN-LAST:event_Bouton_circuitActionPerformed

    private void ok_dialog_circuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ok_dialog_circuitActionPerformed
        // TODO add your handling code here:
        Dialog_circuit.dispose();
    }//GEN-LAST:event_ok_dialog_circuitActionPerformed

    private void Dialog_circuitWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_Dialog_circuitWindowClosing
        // TODO add your handling code here:
        
        Creation_circuit_etat ="reset";
        
    }//GEN-LAST:event_Dialog_circuitWindowClosing

    private void liste_circuitsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_liste_circuitsValueChanged
        // TODO add your handling code here:
        //System.out.println("I GOT CALLED YO");
       
            int i = liste_circuits.getSelectedIndex();
            if (i>=0){
                
                Circuit_selectionnee = Sim.req_circuit_index(i);
                Element_selectionne = "Circuit";
                Print.setText("Circuit sélectionné: "+Circuit_selectionnee.req_numero());
            }
            else{
                Circuit_selectionnee = null;
                Element_selectionne = "Circuit";
            }
        
    }//GEN-LAST:event_liste_circuitsValueChanged
    
    
    //nécéssaire quand il y a un seul circuit
    private void liste_circuitsFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_liste_circuitsFocusGained
        // TODO add your handling code here:
        liste_circuitsValueChanged(null);
    }//GEN-LAST:event_liste_circuitsFocusGained


    private void Bouton_simulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bouton_simulerActionPerformed
        // TODO add your handling code here:
        Sim.Simuler();
        fenetre_sim1.repaint();
    }//GEN-LAST:event_Bouton_simulerActionPerformed

    private void Bouton_arreterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bouton_arreterActionPerformed
        // TODO add your handling code here:
        Sim.Arreter_simulation();
         fenetre_sim1.repaint();
    }//GEN-LAST:event_Bouton_arreterActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SimulatHeure.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SimulatHeure.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SimulatHeure.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SimulatHeure.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SimulatHeure().setVisible(true);
           
            }
        });
    }
   
    
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Bouton_arreter;
    private javax.swing.JButton Bouton_circuit;
    private javax.swing.JButton Bouton_simuler;
    private javax.swing.JButton Bouton_supprimer;
    private javax.swing.JDialog Dialog_circuit;
    private javax.swing.JTextPane Print;
    private javax.swing.JRadioButton Radio_ajouter;
    private javax.swing.JRadioButton Radio_deplacer;
    private javax.swing.JRadioButton Radio_select;
    private javax.swing.ButtonGroup buttonGroup1;
    private simulatheure.Fenetre_sim fenetre_sim1;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JList liste_circuits;
    private javax.swing.JButton ok_dialog_circuit;
    private javax.swing.JSpinner spin_freq;
    private javax.swing.JSpinner spin_num;
    private javax.swing.JSpinner spin_t;
    private javax.swing.JTextField text_nom;
    // End of variables declaration//GEN-END:variables
}
